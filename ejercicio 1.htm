<!DOCTYPE html>
    <html>
    <head>
    <style>
    body {
        background - color: #ffffff;
        overflow: hidden;
    } 
      </style> 
      </head> 
      <body>
      <script src = "https://cdnjs.cloudflare.com/ajax/libs/three.js/95/three.min.js " ></script > 
      <script>
    var camera, scene, renderer;
    var geometry, material, mesh;
    var clock;

function init() {
    renderer = new THREE.WebGLRenderer();
    renderer.setSize(window.innerWidth, window.innerHeight);
    document.body.appendChild(renderer.domElement);
    scene = new THREE.Scene();

    geometry = new THREE.CubeGeometry(3, 3, 3);
    material = new THREE.MeshBasicMaterial({color: 0xff0000, wireframe: true});
    mesh = new THREE.Mesh(geometry, material);
    mesh.position.set(4, 0, 0);
    scene.add(mesh);

    geometry = new THREE.CubeGeometry(3, 3, 3);
    material = new THREE.MeshBasicMaterial({color: 0x00ff000,wireframe: true});
    mesh1 = new THREE.Mesh(geometry, material);
    mesh1.position.set(0, 4, 0);
    scene.add(mesh1);

    geometry = new THREE.CubeGeometry(3, 3, 3);
    material = new THREE.MeshBasicMaterial({color: 0xfff,wireframe: true});
    mesh2 = new THREE.Mesh(geometry, material);
    mesh2.position.set(0, 0, 4);
    scene.add(mesh2);

    const axesHelper = new THREE.AxesHelper(10);
    scene.add(axesHelper);

    camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 100);
    camera.position.set(12, 9, 9);
    camera.lookAt(mesh.position);

    clock = new THREE.Clock();
    window.addEventListener('resize', onWindowResize, false);
}

function onWindowResize() {
    windowHalfX = window.innerWidth / 2;
    windowHalfY = window.innerHeight / 2;
    camera.aspect = window.innerWidth / window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
}
init();
renderer.render(scene, camera); 
</script> 
</body> 
</html>